{
	"info": {
		"_postman_id": "1b936054-d6be-43a6-a4b2-9f7ceaaf7e6f",
		"name": "Golden Movie Studio",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44411774"
	},
	"item": [
		{
			"name": "Buscar por ID válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Deve validar id, nome, email\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"nome\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"email\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/usuario/id/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"usuario",
						"id",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar por ID inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
							"});\r",
							"pm.test(\"Deve validar mensagem de retorno\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Usuário não encontrado.\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/usuario/id/8",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"usuario",
						"id",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "Email já cadastrado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
							"});\r",
							"pm.test(\"Deve validar mensagem de retorno\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Este email já está cadastrado.\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Alice\",\r\n  \"sobrenome\": \"Johnson\",\r\n  \"email\": \"alice3@teste.com\",\r\n  \"telefone\": \"123456789\",\r\n  \"senha\": \"Senha@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cadastro",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cadastro"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cadastro realizado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
							"});\r",
							"pm.test(\"Deve validar mensagem de retorno\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso!\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Alice\",\r\n  \"sobrenome\": \"Johnson\",\r\n  \"email\": \"alice30@teste.com\",\r\n  \"telefone\": \"123456789\",\r\n  \"senha\": \"Senha@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cadastro",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cadastro"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verificação de campos vazios",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
							"});\r",
							"pm.test(\"Deve validar mensagem de retorno\", function () {\r",
							"    const response = pm.response.json();\r",
							"\r",
							"    const mensagensPossiveis = [\r",
							"        \"Nome não pode estar vazio\",\r",
							"        \"Sobrenome não pode estar vazio\",\r",
							"        \"E-mail não pode estar vazio\",\r",
							"        \"\\\"senha\\\" is not allowed to be empty\",\r",
							"    ]\r",
							"    pm.expect(mensagensPossiveis).to.include(response.message);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Alice\",\r\n  \"sobrenome\": \"Johnson\",\r\n  \"email\": \"alice0@teste.com\",\r\n  \"telefone\": \"123456789\",\r\n  \"senha\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cadastro",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cadastro"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verificação de campos string",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
							"});\r",
							"pm.test(\"Deve validar mensagem de retorno\", function () {\r",
							"    const response = pm.response.json();\r",
							"\r",
							"    const mensagensPossiveis = [\r",
							"        \"Nome deve conter apenas caracteres alfabéticos, acentuados e espaços\",\r",
							"        \"Sobrenome deve conter apenas caracteres alfabéticos, acentuados e espaços\",\r",
							"        \"E-mail deve ser um email válido\",\r",
							"    ]\r",
							"    pm.expect(mensagensPossiveis).to.include(response.message);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Alice\",\r\n  \"sobrenome\": \"Johnson\",\r\n  \"email\": \"123\",\r\n  \"telefone\": \"123456789\",\r\n  \"senha\": \"Senha@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cadastro",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cadastro"
					]
				}
			},
			"response": []
		},
		{
			"name": "Validação de senha forte",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
							"});\r",
							"pm.test(\"Deve validar mensagem de retorno\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Senha deve ter pelo menos 8 caracteres, incluir uma letra maiúscula, um número e um caractere especial (!@#$&*)\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Alice\",\r\n  \"sobrenome\": \"Johnson\",\r\n  \"email\": \"alice0@teste.com\",\r\n  \"telefone\": \"123456789\",\r\n  \"senha\": \"senha@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cadastro",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cadastro"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verificação de telefone inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Deve validar a propriedade message\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"message\");\r",
							"});\r",
							"pm.test(\"Deve validar mensagem de retorno\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Telefone deve conter apenas números\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Alice\",\r\n  \"sobrenome\": \"Johnson\",\r\n  \"email\": \"alice0@teste.com\",\r\n  \"telefone\": \"abc\",\r\n  \"senha\": \"Senha@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cadastro",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cadastro"
					]
				}
			},
			"response": []
		}
	]
}